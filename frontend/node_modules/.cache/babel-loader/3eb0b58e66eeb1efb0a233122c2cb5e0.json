{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Temporaria/whticket-soon/Habyb/whatticketsoondes/frontend/src/components/TicketListItemCustom/index.js\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { format, isSameDay, parseISO } from \"date-fns\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue, green, grey } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { i18n } from \"../../translate/i18n\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport AndroidIcon from \"@material-ui/icons/Android\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport ContactTag from \"../ContactTag\";\nimport TicketMessagesDialog from \"../TicketMessagesDialog\";\nconst useStyles = makeStyles(theme => ({\n  ticket: {\n    position: \"relative\"\n  },\n  pendingTicket: {\n    cursor: \"unset\"\n  },\n  queueTag: {\n    background: \"#FCFCFC\",\n    color: \"#000\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  newMessagesCount: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n    top: \"10px\",\n    left: \"20px\",\n    borderRadius: 0\n  },\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\"\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\"\n  },\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"5px\"\n  },\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    top: -21,\n    background: '#333333',\n    color: '#ffffff',\n    border: '1px solid #3a3b6c',\n    borderRadius: 5,\n    padding: 1,\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: '0.9em'\n  },\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\"\n  },\n  contactLastMessage: {\n    paddingRight: \"0%\",\n    marginLeft: \"5px\"\n  },\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500]\n  },\n  acceptButton: {\n    position: \"absolute\",\n    right: \"108px\"\n  },\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\"\n  },\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\"\n  },\n  ticketInfo: {\n    position: \"relative\",\n    top: -13\n  },\n  secondaryContentSecond: {\n    display: 'flex',\n    // marginTop: 5,\n    //marginLeft: \"5px\",\n    alignItems: \"flex-start\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignContent: \"flex-start\"\n  },\n  ticketInfo1: {\n    position: \"relative\",\n    top: 13,\n    right: 0\n  },\n  Radiusdot: {\n    \"& .MuiBadge-badge\": {\n      borderRadius: 2,\n      position: \"inherit\",\n      height: 16,\n      margin: 2,\n      padding: 3\n    },\n    \"& .MuiBadge-anchorOriginTopRightRectangle\": {\n      transform: \"scale(1) translate(0%, -40%)\"\n    }\n  }\n}));\n{/*PLW DESIGN INSERIDO O dentro do const handleChangeTab*/}\nconst TicketListItemCustom = ({\n  ticket\n}) => {\n  var _ticket$queue5, _ticket$queue5$name, _ticket$queue6, _ticket$contact, _ticket$contact2, _ticket$whatsapp, _ticket$whatsapp2, _ticket$whatsapp2$nam, _ticket$queue7, _ticket$queue8, _ticket$queue8$name;\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [ticketUser, setTicketUser] = useState(null);\n  const [ticketQueueName, setTicketQueueName] = useState(null);\n  const [ticketQueueColor, setTicketQueueColor] = useState(null);\n  const [tag, setTag] = useState([]);\n  const [whatsAppName, setWhatsAppName] = useState(null);\n  const [lastInteractionLabel, setLastInteractionLabel] = useState('');\n  const [openTicketMessageDialog, setOpenTicketMessageDialog] = useState(false);\n  const {\n    ticketId\n  } = useParams();\n  const isMounted = useRef(true);\n  const {\n    setCurrentTicket\n  } = useContext(TicketsContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [verpreview, setverpreview] = useState(false);\n  const {\n    profile\n  } = user;\n  useEffect(() => {\n    var _ticket$queue, _ticket$queue$name, _ticket$queue2;\n    if (ticket.userId && ticket.user) {\n      var _ticket$user, _ticket$user$name;\n      setTicketUser((_ticket$user = ticket.user) === null || _ticket$user === void 0 ? void 0 : (_ticket$user$name = _ticket$user.name) === null || _ticket$user$name === void 0 ? void 0 : _ticket$user$name.toUpperCase());\n    }\n    setTicketQueueName((_ticket$queue = ticket.queue) === null || _ticket$queue === void 0 ? void 0 : (_ticket$queue$name = _ticket$queue.name) === null || _ticket$queue$name === void 0 ? void 0 : _ticket$queue$name.toUpperCase());\n    setTicketQueueColor((_ticket$queue2 = ticket.queue) === null || _ticket$queue2 === void 0 ? void 0 : _ticket$queue2.color);\n    if (ticket.whatsappId && ticket.whatsapp) {\n      var _ticket$whatsapp$name;\n      setWhatsAppName((_ticket$whatsapp$name = ticket.whatsapp.name) === null || _ticket$whatsapp$name === void 0 ? void 0 : _ticket$whatsapp$name.toUpperCase());\n    }\n    setTag(ticket === null || ticket === void 0 ? void 0 : ticket.tags);\n    return () => {\n      isMounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  {/*CÓDIGO NOVO SAUDAÇÃO*/}\n  const handleCloseTicket = async id => {\n    setTag(ticket === null || ticket === void 0 ? void 0 : ticket.tags);\n    setLoading(true);\n    try {\n      var _ticket$queue3;\n      await api.put(`/tickets/${id}`, {\n        status: \"closed\",\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        queueId: ticket === null || ticket === void 0 ? void 0 : (_ticket$queue3 = ticket.queue) === null || _ticket$queue3 === void 0 ? void 0 : _ticket$queue3.id,\n        useIntegration: false,\n        promptId: null,\n        integrationId: null\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n  useEffect(() => {\n    const renderLastInteractionLabel = () => {\n      let labelColor = '';\n      let labelText = '';\n      if (!ticket.lastMessage) return '';\n      const lastInteractionDate = parseISO(ticket.updatedAt);\n      const currentDate = new Date();\n      const timeDifference = currentDate - lastInteractionDate;\n      const hoursDifference = Math.floor(timeDifference / (1000 * 60 * 60));\n      const minutesDifference = Math.floor(timeDifference / (1000 * 60));\n      if (minutesDifference >= 3 && minutesDifference <= 10) {\n        labelText = `(${minutesDifference} m atrás)`;\n        labelColor = 'green';\n      } else if (minutesDifference >= 30 && minutesDifference < 60) {\n        labelText = `(${minutesDifference} m atrás)`;\n        labelColor = 'Orange';\n      } else if (minutesDifference > 60 && hoursDifference < 24) {\n        labelText = `(${hoursDifference} h atrás)`;\n        labelColor = 'red';\n      } else if (hoursDifference >= 24) {\n        labelText = `(${Math.floor(hoursDifference / 24)} dias atrás)`;\n        labelColor = 'red';\n      }\n      return {\n        labelText,\n        labelColor\n      };\n    };\n\n    // Função para atualizar o estado do componente\n    const updateLastInteractionLabel = () => {\n      const {\n        labelText,\n        labelColor\n      } = renderLastInteractionLabel();\n      setLastInteractionLabel( /*#__PURE__*/React.createElement(Badge, {\n        className: classes.lastInteractionLabel,\n        style: {\n          color: labelColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, labelText));\n      // Agendando a próxima atualização após 30 segundos\n      setTimeout(updateLastInteractionLabel, 30 * 1000);\n    };\n\n    // Inicializando a primeira atualização\n    updateLastInteractionLabel();\n  }, [ticket]); // Executando apenas uma vez ao montar o componente\n\n  const handleReopenTicket = async id => {\n    setLoading(true);\n    try {\n      var _ticket$queue4;\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        queueId: ticket === null || ticket === void 0 ? void 0 : (_ticket$queue4 = ticket.queue) === null || _ticket$queue4 === void 0 ? void 0 : _ticket$queue4.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n  const handleAcepptTicket = async id => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user === null || user === void 0 ? void 0 : user.id\n      });\n      let settingIndex;\n      try {\n        const {\n          data\n        } = await api.get(\"/settings/\");\n        settingIndex = data.filter(s => s.key === \"sendGreetingAccepted\");\n      } catch (err) {\n        toastError(err);\n      }\n      if (settingIndex[0].value === \"enabled\" && !ticket.isGroup) {\n        handleSendMessage(ticket.id);\n      }\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n\n    // handleChangeTab(null, \"tickets\");\n    // handleChangeTab(null, \"open\");\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n  const handleSendMessage = async id => {\n    const msg = `{{ms}} *{{name}}*, meu nome é *${user === null || user === void 0 ? void 0 : user.name}* e agora vou prosseguir com seu atendimento!`;\n    const message = {\n      read: 1,\n      fromMe: true,\n      mediaUrl: \"\",\n      body: `*Mensagem Automática:*\\n${msg.trim()}`\n    };\n    try {\n      await api.post(`/messages/${id}`, message);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  {/*CÓDIGO NOVO SAUDAÇÃO*/}\n  const handleSelectTicket = ticket => {\n    const code = uuidv4();\n    const {\n      id,\n      uuid\n    } = ticket;\n    setCurrentTicket({\n      id,\n      uuid,\n      code\n    });\n  };\n  const renderTicketInfo = () => {\n    if (ticketUser) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ticket.chatbot && /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Chatbot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AndroidIcon, {\n        fontSize: \"small\",\n        style: {\n          color: grey[700],\n          marginRight: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ticket.chatbot && /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Chatbot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AndroidIcon, {\n        fontSize: \"small\",\n        style: {\n          color: grey[700],\n          marginRight: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }\n      })));\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TicketMessagesDialog, {\n    open: openTicketMessageDialog,\n    handleClose: () => setOpenTicketMessageDialog(false),\n    ticketId: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    dense: true,\n    button: true,\n    onClick: e => {\n      if (ticket.status === \"pending\") return;\n      handleSelectTicket(ticket);\n    },\n    selected: ticketId && +ticketId === ticket.id,\n    className: clsx(classes.ticket, {\n      [classes.pendingTicket]: ticket.status === \"pending\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    arrow: true,\n    placement: \"right\",\n    title: ((_ticket$queue5 = ticket.queue) === null || _ticket$queue5 === void 0 ? void 0 : (_ticket$queue5$name = _ticket$queue5.name) === null || _ticket$queue5$name === void 0 ? void 0 : _ticket$queue5$name.toUpperCase()) || \"SEM FILA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: ((_ticket$queue6 = ticket.queue) === null || _ticket$queue6 === void 0 ? void 0 : _ticket$queue6.color) || \"#7C7C7C\"\n    },\n    className: classes.ticketQueueColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, ticket.status !== \"pending\" ? /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      marginTop: \"-20px\",\n      marginLeft: \"-3px\",\n      width: \"55px\",\n      height: \"55px\",\n      borderRadius: \"10%\"\n    },\n    src: ticket === null || ticket === void 0 ? void 0 : (_ticket$contact = ticket.contact) === null || _ticket$contact === void 0 ? void 0 : _ticket$contact.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      marginTop: \"-30px\",\n      marginLeft: \"0px\",\n      width: \"50px\",\n      height: \"50px\",\n      borderRadius: \"10%\"\n    },\n    src: ticket === null || ticket === void 0 ? void 0 : (_ticket$contact2 = ticket.contact) === null || _ticket$contact2 === void 0 ? void 0 : _ticket$contact2.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    disableTypography: true,\n    primary: /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.contactNameWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      noWrap: true,\n      component: \"span\",\n      variant: \"body2\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }\n    }, ticket.contact.name, \" \", lastInteractionLabel), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: classes.ticketInfo1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, renderTicketInfo())), profile === \"admin\" && /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Espiar Conversa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(VisibilityIcon, {\n      onClick: () => setOpenTicketMessageDialog(true),\n      fontSize: \"small\",\n      style: {\n        color: blue[700],\n        cursor: \"pointer\",\n        marginLeft: 10,\n        verticalAlign: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }\n    })))),\n    secondary: /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.contactNameWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.contactLastMessage,\n      noWrap: true,\n      component: \"span\",\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 15\n      }\n    }, \" \", ticket.lastMessage && ticket.lastMessage.includes('data:image/png;base64') ? /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    }, \" Localiza\\xE7\\xE3o\") : /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 15\n      }\n    }, ticket.lastMessage), ticket.lastMessage && verpreview ? /*#__PURE__*/React.createElement(React.Fragment, null, ticket.lastMessage.includes('VCARD') ? /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, \"Novo Contato recebido\") : ticket.lastMessage.includes('data:image') ? /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 19\n      }\n    }, \"Localiza\\xE7\\xE3o recebida\") : /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 19\n      }\n    }, ticket.lastMessage.slice(0, 20) + '...')) : /*#__PURE__*/React.createElement(MarkdownWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 15\n      }\n    }, \"---\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.secondaryContentSecond,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }\n    }, (ticket === null || ticket === void 0 ? void 0 : (_ticket$whatsapp = ticket.whatsapp) === null || _ticket$whatsapp === void 0 ? void 0 : _ticket$whatsapp.name) ? /*#__PURE__*/React.createElement(Badge, {\n      className: classes.connectionTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 45\n      }\n    }, ticket === null || ticket === void 0 ? void 0 : (_ticket$whatsapp2 = ticket.whatsapp) === null || _ticket$whatsapp2 === void 0 ? void 0 : (_ticket$whatsapp2$nam = _ticket$whatsapp2.name) === null || _ticket$whatsapp2$nam === void 0 ? void 0 : _ticket$whatsapp2$nam.toUpperCase()) : /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 136\n      }\n    }), ticketUser ? /*#__PURE__*/React.createElement(Badge, {\n      style: {\n        backgroundColor: \"#000000\"\n      },\n      className: classes.connectionTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 33\n      }\n    }, ticketUser) : /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 136\n      }\n    }), /*#__PURE__*/React.createElement(Badge, {\n      style: {\n        backgroundColor: ((_ticket$queue7 = ticket.queue) === null || _ticket$queue7 === void 0 ? void 0 : _ticket$queue7.color) || \"#7c7c7c\"\n      },\n      className: classes.connectionTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 19\n      }\n    }, ((_ticket$queue8 = ticket.queue) === null || _ticket$queue8 === void 0 ? void 0 : (_ticket$queue8$name = _ticket$queue8.name) === null || _ticket$queue8$name === void 0 ? void 0 : _ticket$queue8$name.toUpperCase()) || \"SEM FILA\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingTop: \"2px\"\n      },\n      className: classes.secondaryContentSecond,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }\n    }, tag === null || tag === void 0 ? void 0 : tag.map(tag => {\n      return /*#__PURE__*/React.createElement(ContactTag, {\n        tag: tag,\n        key: `ticket-contact-tag-${ticket.id}-${tag.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 23\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Badge, {\n      className: classes.newMessagesCount,\n      badgeContent: ticket.unreadMessages,\n      classes: {\n        badge: classes.badgeStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }\n  }, ticket.lastMessage && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastMessageTime,\n    component: \"span\",\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 15\n    }\n  }, isSameDay(parseISO(ticket.updatedAt), new Date()) ? /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"HH:mm\")) : /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.secondaryContentSecond,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }\n  }, ticket.status === \"pending\" && /*#__PURE__*/React.createElement(ButtonWithSpinner\n  //color=\"primary\"\n  , {\n    style: {\n      backgroundColor: 'green',\n      color: 'white',\n      padding: '0px',\n      bottom: '17px',\n      borderRadius: '0px',\n      left: '8px',\n      fontSize: '0.6rem'\n    },\n    variant: \"contained\",\n    className: classes.acceptButton,\n    size: \"small\",\n    loading: loading\n    //PLW DESIGN INSERIDO O handleChangeTab\n    ,\n    onClick: e => handleAcepptTicket(ticket.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, i18n.t(\"ticketsList.buttons.accept\")), ticket.status !== \"closed\" && /*#__PURE__*/React.createElement(ButtonWithSpinner\n  //color=\"primary\"\n  , {\n    style: {\n      backgroundColor: 'red',\n      color: 'white',\n      padding: '0px',\n      bottom: '0px',\n      borderRadius: '0px',\n      left: '8px',\n      fontSize: '0.6rem'\n    },\n    variant: \"contained\",\n    className: classes.acceptButton,\n    size: \"small\",\n    loading: loading,\n    onClick: e => handleCloseTicket(ticket.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }\n  }, i18n.t(\"ticketsList.buttons.closed\")), ticket.status === \"closed\" && /*#__PURE__*/React.createElement(ButtonWithSpinner\n  //color=\"primary\"\n  , {\n    style: {\n      backgroundColor: 'red',\n      color: 'white',\n      padding: '0px',\n      bottom: '0px',\n      borderRadius: '0px',\n      left: '8px',\n      fontSize: '0.6rem'\n    },\n    variant: \"contained\",\n    className: classes.acceptButton,\n    size: \"small\",\n    loading: loading,\n    onClick: e => handleReopenTicket(ticket.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }\n  }, i18n.t(\"ticketsList.buttons.reopen\")))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }\n  }));\n};\nexport default TicketListItemCustom;","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","clsx","format","isSameDay","parseISO","useHistory","useParams","Avatar","Badge","Box","Divider","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Typography","blue","green","grey","makeStyles","i18n","Tooltip","v4","uuidv4","AuthContext","TicketsContext","toastError","api","ButtonWithSpinner","MarkdownWrapper","AndroidIcon","VisibilityIcon","ContactTag","TicketMessagesDialog","useStyles","theme","ticket","position","pendingTicket","cursor","queueTag","background","color","marginRight","padding","fontWeight","paddingLeft","paddingRight","borderRadius","fontSize","whiteSpace","noTicketsDiv","display","height","margin","flexDirection","alignItems","justifyContent","newMessagesCount","alignSelf","marginLeft","top","left","noTicketsText","textAlign","lineHeight","connectionTag","noTicketsTitle","contactNameWrapper","lastMessageTime","justifySelf","border","closedBadge","contactLastMessage","badgeStyle","backgroundColor","acceptButton","right","ticketQueueColor","flex","width","ticketInfo","secondaryContentSecond","flexWrap","alignContent","ticketInfo1","Radiusdot","transform","TicketListItemCustom","_ticket$queue5","_ticket$queue5$name","_ticket$queue6","_ticket$contact","_ticket$contact2","_ticket$whatsapp","_ticket$whatsapp2","_ticket$whatsapp2$nam","_ticket$queue7","_ticket$queue8","_ticket$queue8$name","classes","history","loading","setLoading","ticketUser","setTicketUser","ticketQueueName","setTicketQueueName","setTicketQueueColor","tag","setTag","whatsAppName","setWhatsAppName","lastInteractionLabel","setLastInteractionLabel","openTicketMessageDialog","setOpenTicketMessageDialog","ticketId","isMounted","setCurrentTicket","user","verpreview","setverpreview","profile","_ticket$queue","_ticket$queue$name","_ticket$queue2","userId","_ticket$user","_ticket$user$name","name","toUpperCase","queue","whatsappId","whatsapp","_ticket$whatsapp$name","tags","current","handleCloseTicket","id","_ticket$queue3","put","status","queueId","useIntegration","promptId","integrationId","err","push","renderLastInteractionLabel","labelColor","labelText","lastMessage","lastInteractionDate","updatedAt","currentDate","Date","timeDifference","hoursDifference","Math","floor","minutesDifference","updateLastInteractionLabel","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","handleReopenTicket","_ticket$queue4","uuid","handleAcepptTicket","settingIndex","data","get","filter","s","key","value","isGroup","handleSendMessage","msg","message","read","fromMe","mediaUrl","body","trim","post","handleSelectTicket","code","renderTicketInfo","Fragment","chatbot","title","open","handleClose","dense","button","onClick","e","selected","arrow","placement","marginTop","src","contact","profilePicUrl","disableTypography","primary","noWrap","component","variant","verticalAlign","secondary","includes","slice","paddingTop","map","badgeContent","unreadMessages","badge","bottom","size","t"],"sources":["/Users/andre/Temporaria/whticket-soon/Habyb/whatticketsoondes/frontend/src/components/TicketListItemCustom/index.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { format, isSameDay, parseISO } from \"date-fns\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue, green, grey } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport { Tooltip } from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\n\nimport AndroidIcon from \"@material-ui/icons/Android\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport ContactTag from \"../ContactTag\";\nimport TicketMessagesDialog from \"../TicketMessagesDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    position: \"relative\",\n  },\n\n  pendingTicket: {\n    cursor: \"unset\",\n  },\n  queueTag: {\n    background: \"#FCFCFC\",\n    color: \"#000\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  newMessagesCount: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n    top: \"10px\",\n    left: \"20px\",\n    borderRadius: 0,\n  },\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"5px\",\n  },\n\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    top: -21,\n    background: '#333333',\n    color: '#ffffff',\n    border: '1px solid #3a3b6c',\n    borderRadius: 5,\n    padding: 1,\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: '0.9em',\n  },\n\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\",\n  },\n\n  contactLastMessage: {\n    paddingRight: \"0%\",\n    marginLeft: \"5px\",\n  },\n\n\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500],\n  },\n\n  acceptButton: {\n    position: \"absolute\",\n    right: \"108px\",\n  },\n\n\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\",\n  },\n\n\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n  },\n\n  ticketInfo: {\n    position: \"relative\",\n    top: -13\n  },\n  secondaryContentSecond: {\n    display: 'flex',\n    // marginTop: 5,\n    //marginLeft: \"5px\",\n    alignItems: \"flex-start\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignContent: \"flex-start\",\n  },\n  ticketInfo1: {\n    position: \"relative\",\n    top: 13,\n    right: 0\n  },\n  Radiusdot: {\n    \"& .MuiBadge-badge\": {\n      borderRadius: 2,\n      position: \"inherit\",\n      height: 16,\n      margin: 2,\n      padding: 3\n    },\n    \"& .MuiBadge-anchorOriginTopRightRectangle\": {\n      transform: \"scale(1) translate(0%, -40%)\",\n    },\n\n  }\n}));\n  {/*PLW DESIGN INSERIDO O dentro do const handleChangeTab*/}\n  const TicketListItemCustom = ({ ticket }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [ticketUser, setTicketUser] = useState(null);\n  const [ticketQueueName, setTicketQueueName] = useState(null);\n  const [ticketQueueColor, setTicketQueueColor] = useState(null);\n  const [tag, setTag] = useState([]);\n  const [whatsAppName, setWhatsAppName] = useState(null);\n  const [lastInteractionLabel, setLastInteractionLabel] = useState('');\n  const [openTicketMessageDialog, setOpenTicketMessageDialog] = useState(false);\n  const { ticketId } = useParams();\n  const isMounted = useRef(true);\n  const { setCurrentTicket } = useContext(TicketsContext);\n  const { user } = useContext(AuthContext);\n  const [verpreview, setverpreview] = useState(false);\n  const { profile } = user;\n\n  useEffect(() => {\n    if (ticket.userId && ticket.user) {\n      setTicketUser(ticket.user?.name?.toUpperCase());\n    }\n    setTicketQueueName(ticket.queue?.name?.toUpperCase());\n    setTicketQueueColor(ticket.queue?.color);\n\n    if (ticket.whatsappId && ticket.whatsapp) {\n      setWhatsAppName(ticket.whatsapp.name?.toUpperCase());\n    }\n\n    setTag(ticket?.tags);\n\n    return () => {\n      isMounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  {/*CÓDIGO NOVO SAUDAÇÃO*/}\n  const handleCloseTicket = async (id) => {\n    setTag(ticket?.tags);\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"closed\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id,\n        useIntegration: false,\n        promptId: null,\n        integrationId: null\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n\n  useEffect(() => {\n    const renderLastInteractionLabel = () => {\n      let labelColor = '';\n      let labelText = '';\n\n      if (!ticket.lastMessage) return '';\n\n      const lastInteractionDate = parseISO(ticket.updatedAt);\n      const currentDate = new Date();\n      const timeDifference = currentDate - lastInteractionDate;\n      const hoursDifference = Math.floor(timeDifference / (1000 * 60 * 60));\n      const minutesDifference = Math.floor(timeDifference / (1000 * 60));\n\n\n      if (minutesDifference >= 3 && minutesDifference <= 10) {\n        labelText = `(${minutesDifference} m atrás)`;\n        labelColor = 'green';\n      } else if (minutesDifference >= 30 && minutesDifference < 60) {\n        labelText = `(${minutesDifference} m atrás)`;\n        labelColor = 'Orange';\n      } else if (minutesDifference > 60  && hoursDifference < 24) {\n        labelText = `(${hoursDifference} h atrás)`;\n        labelColor = 'red';\n      } else if (hoursDifference >= 24) {\n        labelText = `(${Math.floor(hoursDifference / 24)} dias atrás)`;\n        labelColor = 'red';\n      }\n\n\n      return { labelText, labelColor };\n    };\n\n    // Função para atualizar o estado do componente\n    const updateLastInteractionLabel = () => {\n      const { labelText, labelColor } = renderLastInteractionLabel();\n      setLastInteractionLabel(\n        <Badge\n          className={classes.lastInteractionLabel}\n          style={{ color: labelColor }}\n        >\n          {labelText}\n        </Badge>\n      );\n      // Agendando a próxima atualização após 30 segundos\n      setTimeout(updateLastInteractionLabel, 30 * 1000);\n    };\n\n    // Inicializando a primeira atualização\n    updateLastInteractionLabel();\n\n  }, [ticket]); // Executando apenas uma vez ao montar o componente\n\n  const handleReopenTicket = async (id) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n    const handleAcepptTicket = async (id) => {\n        setLoading(true);\n        try {\n            await api.put(`/tickets/${id}`, {\n                status: \"open\",\n                userId: user?.id,\n            });\n            \n            let settingIndex;\n\n            try {\n                const { data } = await api.get(\"/settings/\");\n                \n                settingIndex = data.filter((s) => s.key === \"sendGreetingAccepted\");\n                \n            } catch (err) {\n                toastError(err);\n                   \n            }\n            \n            if (settingIndex[0].value === \"enabled\" && !ticket.isGroup) {\n                handleSendMessage(ticket.id);\n                \n            }\n\n        } catch (err) {\n            setLoading(false);\n            \n            toastError(err);\n        }\n        if (isMounted.current) {\n            setLoading(false);\n        }\n\n        // handleChangeTab(null, \"tickets\");\n        // handleChangeTab(null, \"open\");\n        history.push(`/tickets/${ticket.uuid}`);\n    };\n\t\n\t    const handleSendMessage = async (id) => {\n        \n        const msg = `{{ms}} *{{name}}*, meu nome é *${user?.name}* e agora vou prosseguir com seu atendimento!`;\n        const message = {\n            read: 1,\n            fromMe: true,\n            mediaUrl: \"\",\n            body: `*Mensagem Automática:*\\n${msg.trim()}`,\n        };\n        try {\n            await api.post(`/messages/${id}`, message);\n        } catch (err) {\n            toastError(err);\n            \n        }\n    };\n\t{/*CÓDIGO NOVO SAUDAÇÃO*/}\n\n  const handleSelectTicket = (ticket) => {\n    const code = uuidv4();\n    const { id, uuid } = ticket;\n    setCurrentTicket({ id, uuid, code });\n  };\n\n\n  const renderTicketInfo = () => {\n    if (ticketUser) {\n\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n\n          {/* </span> */}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment key={ticket.id}>\n      <TicketMessagesDialog\n        open={openTicketMessageDialog}\n\n        handleClose={() => setOpenTicketMessageDialog(false)}\n        ticketId={ticket.id}\n      ></TicketMessagesDialog>\n      <ListItem dense button\n        onClick={(e) => {\n          if (ticket.status === \"pending\") return;\n          handleSelectTicket(ticket);\n        }}\n        selected={ticketId && +ticketId === ticket.id}\n        className={clsx(classes.ticket, {\n          [classes.pendingTicket]: ticket.status === \"pending\",\n        })}\n      >\n        <Tooltip arrow placement=\"right\" title={ticket.queue?.name?.toUpperCase() || \"SEM FILA\"} >\n          <span style={{ backgroundColor: ticket.queue?.color || \"#7C7C7C\" }} className={classes.ticketQueueColor}></span>\n        </Tooltip>\n        <ListItemAvatar>\n          {ticket.status !== \"pending\" ?\n            <Avatar\n              style={{\n                marginTop: \"-20px\",\n                marginLeft: \"-3px\",\n                width: \"55px\",\n                height: \"55px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n            :\n            <Avatar\n              style={{\n                marginTop: \"-30px\",\n                marginLeft: \"0px\",\n                width: \"50px\",\n                height: \"50px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n          }\n        </ListItemAvatar>\n        <ListItemText\n          disableTypography\n\n          primary={\n            <span className={classes.contactNameWrapper}>\n            <Typography\n            noWrap\n            component='span'\n            variant='body2'\n            color='textPrimary'\n          >\n            <strong>{ticket.contact.name} {lastInteractionLabel}</strong>\n        <ListItemSecondaryAction>\n          <Box className={classes.ticketInfo1}>{renderTicketInfo()}</Box>\n        </ListItemSecondaryAction>\n                {profile === \"admin\" && (\n                  <Tooltip title=\"Espiar Conversa\">\n                    <VisibilityIcon\n                      onClick={() => setOpenTicketMessageDialog(true)}\n                      fontSize=\"small\"\n                      style={{\n                        color: blue[700],\n                        cursor: \"pointer\",\n                        marginLeft: 10,\n                        verticalAlign: \"middle\"\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Typography>\n        </span>\n\n          }\n          secondary={\n            <span className={classes.contactNameWrapper}>\n\n              <Typography\n                className={classes.contactLastMessage}\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              > {ticket.lastMessage && ticket.lastMessage.includes('data:image/png;base64') ? \n              <MarkdownWrapper> Localização</MarkdownWrapper> : \n              <MarkdownWrapper>{ticket.lastMessage}</MarkdownWrapper>\n            }\n\n            {ticket.lastMessage && verpreview ? (\n              <>\n                {ticket.lastMessage.includes('VCARD') ? (\n                  <MarkdownWrapper>Novo Contato recebido</MarkdownWrapper>\n                ) : ticket.lastMessage.includes('data:image') ? (\n                  <MarkdownWrapper>Localização recebida</MarkdownWrapper>\n                ) : (\n                  <MarkdownWrapper>\n                    {ticket.lastMessage.slice(0, 20) + '...'}\n                  </MarkdownWrapper>\n                )}\n              </>\n            ) : (\n              <MarkdownWrapper>---</MarkdownWrapper>\n            )}\n\n                <span className={classes.secondaryContentSecond} >\n                  {ticket?.whatsapp?.name ? <Badge className={classes.connectionTag}>{ticket?.whatsapp?.name?.toUpperCase()}</Badge> : <br></br>}\n                  {ticketUser ? <Badge style={{ backgroundColor: \"#000000\" }} className={classes.connectionTag}>{ticketUser}</Badge> : <br></br>}\n                  <Badge style={{ backgroundColor: ticket.queue?.color || \"#7c7c7c\" }} className={classes.connectionTag}>{ticket.queue?.name?.toUpperCase() || \"SEM FILA\"}</Badge>\n                </span>\n                <span style={{ paddingTop: \"2px\" }} className={classes.secondaryContentSecond} >\n                  {tag?.map((tag) => {\n                    return (\n                      <ContactTag tag={tag} key={`ticket-contact-tag-${ticket.id}-${tag.id}`} />\n                    );\n                  })}\n                </span>\n              </Typography>\n\n              <Badge\n                className={classes.newMessagesCount}\n                badgeContent={ticket.unreadMessages}\n                classes={{\n                  badge: classes.badgeStyle,\n                }}\n              />\n            </span>\n          }\n\n        />\n        <ListItemSecondaryAction>\n          {ticket.lastMessage && (\n            <>\n\n              <Typography\n                className={classes.lastMessageTime}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n\n                {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                  <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                ) : (\n                  <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                )}\n              </Typography>\n\n              <br />\n\n            </>\n          )}\n\n        </ListItemSecondaryAction>\n        <span className={classes.secondaryContentSecond} >\n          {ticket.status === \"pending\" && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'green', color: 'white', padding: '0px', bottom: '17px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n\t\t\t  //PLW DESIGN INSERIDO O handleChangeTab\n              onClick={e => handleAcepptTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.accept\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status !== \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleCloseTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.closed\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status === \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleReopenTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.reopen\")}\n            </ButtonWithSpinner>\n\n          )}\n        </span>\n      </ListItem>\n\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default TicketListItemCustom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}